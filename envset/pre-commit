#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#

if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

# Redirect output to stderr.
exec 1>&2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
badchar=$(git diff --cached --name-only --diff-filter=A  $against | \
      LC_ALL=C tr -d 'A-Za-z0-9/\n_.-' | wc -c)
if [ $badchar != 0 ]
then
    echo "Check failed: cannot add a file name with non-ASCII or blank char."
    exit 1
fi

names=$( git diff --cached --name-only --diff-filter=AM  $against )

rc=0
geomReg=".*/geom.*\.txt$"
for name in $names
do
  ext=$(echo $name | awk -F. '{print $NF}' )
  bname=$( basename $name )
  if [[ "$ext" == "hh" || "$ext" == "cc" || "$ext" == "fcl" \
      || "$ext" == "C" ||  "$ext" == "h" || "$ext" == "mac" \
      || "$ext" == "icc" || "$bname" == "SConscript" \
      || "$name" =~ $geomReg ]]; then

      # check whitespace and return non-zero if not allowed
      git diff-index --check --cached $against $name
      [ $? -ne 0 ] && rc=1

      if [[ $(tail -c1 "$name" | wc -l) -eq 0 ]]; then
          echo "Commit check failed: $name does not have a terminal newline"
          rc=1
      fi

  fi
done

if [ $rc -ne 0 ] ; then
   echo "Pre-commit check detected format errors, please fix and try to commit again"
fi

exit $rc
